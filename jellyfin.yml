services:
  jellyfin:
    image: linuxserver/jellyfin:10.8.4
    container_name: jellyfin
    ports:
      - 9696:8096
    environment:
      TZ: America/New_York
      PUID: 1000
      PGID: 1000
    volumes:
      - config:/config
      - media:/data
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.port=8096
      - traefik.http.routers.jellyfin.entrypoints=https
      - traefik.http.routers.jellyfin.rule=Host(`${TRAEFIK_HOST?err}`) && PathPrefix(`/jellyfin`)
      - traefik.http.routers.jellyfin.tls.certresolver=studiop
      - docker-volume-backup.stop-during-backup=jellyfin
    networks:
      - jellyfin-net
      - proxy-net
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4GiB
        reservations:
          cpus: '2'
          memory: 2GiB

  backup:
    image: offen/docker-volume-backup:v2.17.1
    container_name: jeyllfin-backup
    restart: unless-stopped
    environment:
      AWS_S3_BUCKET_NAME: backup.docker.data
      AWS_S3_PATH: jellyfin
      AWS_ACCESS_KEY_ID: ${BACKUP_S3_ACCESS_KEY?err}
      AWS_SECRET_ACCESS_KEY: ${BACKUP_S3_SECRET_KEY?err}
      AWS_ENDPOINT: ${BACKUP_S3_ENDPOINT?err}
      AWS_ENDPOINT_PROTO: http
      BACKUP_STOP_CONTAINER_LABEL: jellyfin
      BACKUP_EXCLUDE_REGEXP: '^/backup/data/metadata|^/backup/cache'
    volumes:
      - config:/backup:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - jellyfin-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512MiB
        reservations:
          cpus: '0.5'
          memory: 256MiB

networks:
  jellyfin-net:
    name: jellyfin
  proxy-net:
    name: ${PROXY_NET?err}
    internal: true
    external: true

volumes:
  config:
    name: jellyfin-config
  media:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${NFS_HOST?err},rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14,nfsvers=4,nconnect=16
      device: :/mnt/storage/media
    name: media
