services:
  qbittorrent:
    image: linuxserver/qbittorrent:14.3.9
    container_name: qbittorrent
    environment:
      TZ: America/New_York
      UMASK: 000
    labels:
      - docker-volume-backup.stop-during-backup=qbt
    volumes:
      - config:/config
      - downloads:/downloads
    ports:
      - ${QBT_PORT:-6881}:${QBT_PORT:-6881}
      - ${QBT_PORT:-6881}:${QBT_PORT:-6881}/udp
      - 8017:8080
    restart: unless-stopped
    networks:
      - qbt-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  backup:
    image: offen/docker-volume-backup:v2.17.1
    container_name: qbt-backup
    restart: unless-stopped
    environment:
      AWS_S3_BUCKET_NAME: backup.docker.data
      AWS_S3_PATH: qbittorrent
      AWS_ACCESS_KEY_ID: ${BACKUP_S3_ACCESS_KEY?err}
      AWS_SECRET_ACCESS_KEY: ${BACKUP_S3_SECRET_KEY?err}
      AWS_ENDPOINT: ${BACKUP_S3_ENDPOINT?err}
      AWS_ENDPOINT_PROTO: http
      BACKUP_STOP_CONTAINER_LABEL: qbt
    volumes:
      - config:/backup:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - qbt-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

networks:
  qbt-net:
    name: qbittorrent

volumes:
  downloads:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${NFS_HOST?err},rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14,nconnect=16,nfsvers=4
      device: :/mnt/storage/downloads
    name: downloads
  config:
    name: qbittorrent-config
